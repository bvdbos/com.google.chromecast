'use strict';

const Application = require('castv2-client').Application;
const MediaController = require('./MediaController');

class Media extends Application {
	constructor(client, session) {
		super(client, session);

		MediaController.APP_URN = Media.APP_URN;

		this.media = this.createController(MediaController, session);

		const onStatus = (status) => {
			this.emit('status', status);
		};

		const onMediaDisconnect = () => {
			this.emit('disconnect');
			this.emit('close');
		};

		const onDisconnect = () => {
			this.removeListener('close', onClose);
			this.media.removeListener('disconnect', onDisconnect);
			this.media.removeListener('status', onStatus);
			this.media = null;
		};

		const onClose = () => {
			this.removeListener('disconnect', onDisconnect);
			this.media.removeListener('disconnect', onMediaDisconnect);
			this.media.removeListener('status', onStatus);
			this.media.close();
			this.media = null;
		};

		this.media.on('status', onStatus);
		this.media.once('disconnect', onMediaDisconnect);

		this.once('disconnect', onDisconnect);
		this.once('close', onClose);
	}

	getStatus(callback) {
		this.media.getStatus(callback);
	}

	load(media, options, callback) {
		this.media.load(media, options, callback);
	}

	play(callback) {
		this.media.play(callback);
	}

	pause(callback) {
		this.media.pause(callback);
	}

	stop(callback) {
		this.media.stop(callback);
	};

	seek(time, callback) {
		this.media.seek(time, callback);
	};
}

Media.APP_ID = 'C883DAEE';
Media.APP_URN = 'com.google.cast.media';

module.exports = Media;
